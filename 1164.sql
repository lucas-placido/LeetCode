WITH CTE AS (
    SELECT
        PRODUCT_ID,
        NEW_PRICE,
        CHANGE_DATE,
        DENSE_RANK() OVER(
            PARTITION BY PRODUCT_ID
            ORDER BY CHANGE_DATE DESC
        ) AS R
    FROM PRODUCTS
    WHERE CHANGE_DATE <= "2019-08-16"
)

SELECT 
    PRODUCT_ID,
    NEW_PRICE AS PRICE
FROM CTE
WHERE R = 1

UNION 

SELECT
    PRODUCT_ID,
    10 AS PRICE
FROM PRODUCTS
WHERE PRODUCT_ID NOT IN (SELECT PRODUCT_ID FROM CTE)   